plot(sin(x))
plot()
plot(sin,-pi, 2*pi)
install.packages(leaps)
install.packages("leaps")
library(leaps)
# Function that returns Root Mean Squared Error
rmse = function(m){
return(sqrt(mean(m$residuals^2)))
}
rmse2 <- function(error)
{
sqrt(mean(error^2))
}
# Function that returns Mean Absolute Error
mae = function(m){
return(mean(abs(m$residuals)))
}
mae2 <- function(error)
{
mean(abs(error))
}
descriptors = read.csv("mix_desc.csv")
train = read.csv("mix_train.csv",sep=";")
dtrain = merge(train[,c(1,3)],descriptors,by.x="NSC",by.y="Name")
test = read.csv("mix_test.csv",sep=";")
dtest = merge(test[,c(1,3)],descriptors,by.x="NSC",by.y="Name")
dtrain = dtrain[complete.cases(dtrain),]
dtest = dtest[complete.cases(dtest),]
remove = c()
for(i in 3:1445){
if(var(dtrain[i])<0.1){
print(names(dtrain)[i])
remove = append(remove,i)
}
}
dtrain = dtrain[,-remove]
q()
1*5
cftr <- read.table("Data/cftr.csv", header=TRUE,sep=";")
setwd("~/REPROMEDA_TEST/prakticky-test")
cftr <- read.table("Data/cftr.csv", header=TRUE,sep=";")
fctr
cftr
cftr <- read.table("Data/cftr.csv", header=TRUE,sep=",")
cftr
cftr[,4]
cftr$CFTR_mutace[,4]
cftr$CFTR_mutace[c.[=];[=]]
cftr$CFTR_mutace["c.[=];[=]"]
cftr$CFTR_mutace[]
cftr[cftr$CFTR_mutace == "c.[=];[=]"]
cftr[cftr$CFTR_mutace == "c.[=];[=]",]
cftr[cftr$CFTR_mutace != "c.[=];[=]",]
mut <- cftr[cftr$CFTR_mutace != "c.[=];[=]",]
mut
mut5T <- mut[mut$Poly.T ~= 5T]
mut5T <- mut[mut$Poly.T ~= "5T"]
mut5T <- mut[mut$Poly.T ~ "5T"]
mut5T <- mut[mut$Poly.T ~= "5T",]
mut5T <- mut[mut$Poly.T =~ "5T",]
mut5T <- mut[mut$Poly.T ~ "5T",]
mut5T <- mut[str_detect(mut$Poly.T, "5T"), ]
mut5T <- mut[mut$Poly.T %like% "5T",]
mut5T <- mut[like(mut$Poly.T "5T"),]
mut5T <- mut[like(mut$Poly.T, "5T"),]
mut5T <- mut["5T" %in% mut$Poly.T,]
mut5T
mut5T <- mut[grep(mut$Poly,"5T"),]
mut5T <- mut[grep("5T",mut$Poly),]
mut5T
mut[grep("5T,",mut$Poly),]
grep("5T,",mut$Poly)
mut$Poly
for(i in mut$Poly){
print (i)
}
for(i in mut$Poly){
if(grep("5T,",i){
print (i)
}
)
print (i)
}
for(i in mut$Poly){
if(grep("5T,",i)){
print (i)
}
}
for(i in mut$Poly){
print (i)
if(grep("5T,",i)){
print (i)
}
}
for(i in mut$Poly){
print (i)
grep("5T,",i)
# if(grep("5T,",i)){
#  print (i)
#}
}
for(i in mut$Poly){
#print (i)
grep("5T,",i)
# if(grep("5T,",i)){
#  print (i)
#}
}
for(i in mut$Poly){
#print (i)
grep("5T,",i,value = TRUE)
# if(grep("5T,",i)){
#  print (i)
#}
}
#print (i)
grep("5T,",i,value = TRUE)
for(i in mut$Poly){
#print (i)
grep("5T,",i,value = TRUE)
# if(grep("5T,",i)){
#  print (i)
#}
}
print (i)
grep("5T,",i,value = TRUE)
for(i in mut$Poly){
print (i)
grepl("5T,",i)
# if(grep("5T,",i)){
#  print (i)
#}
}
print (i)
grepl("5T,",i)
for(i in mut$Poly){
print (i)
if(grepl("5T,",i)){
if(grepl("5T,12TG,",i)){
mut5T12TG <- mut[mut$Poly == i,]
}else{
mut5Tany <- mut[mut$Poly == i,]
}
}
# if(grep("5T,",i)){
#  print (i)
#}
}
mut5T12TG
for(i in mut$Poly){
if(grepl("5T,",i)){
print (i)
if(grepl("5T,12TG,",i)){
mut5T12TG <- mut[mut$Poly == i,]
}else{
mut5Tany <- mut[mut$Poly == i,]
}
}
# if(grep("5T,",i)){
#  print (i)
#}
}
for(i in mut$Poly){
print (i)
grepl("5T,",i)
# if(grep("5T,",i)){
#  print (i)
#}
}
grepl("5T,",i)
for(i in mut$Poly){
print (i)
grepl("5T,",i)
# if(grep("5T,",i)){
#  print (i)
#}
}
for(i in mut$Poly){
print (i)
print(grepl("5T,",i))
# if(grep("5T,",i)){
#  print (i)
#}
}
if(grepl("5T,",i)){
print (i)
if(grepl("5T,12TG,",i)){
mut5T12TG <- mut[mut$Poly == i,]
}else{
mut5Tany <- mut[mut$Poly == i,]
}
}
mut
mut5T12TG
mut5Tany
for(i in mut$Poly){
print (i)
print(grepl("5T,",i))
# if(grep("5T,",i)){
#  print (i)
#}
}
mut$Poly
for(i in mut$Poly){
print (i)
print(grepl("5T,",i))
# if(grep("5T,",i)){
#  print (i)
#}
}
for(i in mut$Poly){
if(grepl("5T,",i)){
print (i)
if(grepl("5T,12TG,",i)){
mut5T12TG <- mut[mut$Poly == i,]
}else{
mut5Tany <- mut[mut$Poly == i,]
}
}
# if(grep("5T,",i)){
#  print (i)
#}
}
mut5T12TG
mut5Tany
for(i in mut$Poly){
if(grepl("5T,",i)){
if(grepl("5T,12TG,",i)){
print (i)
mut5T12TG <- mut[mut$Poly == i,]
}else{
print (i)
mut5Tany <- mut[mut$Poly == i,]
}
}
# if(grep("5T,",i)){
#  print (i)
#}
}
for(i in mut$Poly){
if(grepl("5T,",i)){
if(grepl("5T,12TG,",i)){
print (paste(i,"f"))
mut5T12TG <- mut[mut$Poly == i,]
}else{
print (i)
mut5Tany <- mut[mut$Poly == i,]
}
}
# if(grep("5T,",i)){
#  print (i)
#}
}
for(i in mut$Poly){
if(grepl("5T,",i)){
if(grepl("5T,12TG",i)){
print (paste(i,"f"))
mut5T12TG <- mut[mut$Poly == i,]
}else{
print (paste(i,"c"))
mut5Tany <- mut[mut$Poly == i,]
}
}
# if(grep("5T,",i)){
#  print (i)
#}
}
mut5T12TG
mut5Tany
mut5Tany
for(i in mut$Poly){
if(grepl("5T,",i)){
if(grepl("5T,12TG",i)){
print (paste(i,"f"))
mut5T12TG <- rbind(mut5T12TG,mut[mut$Poly == i,])
}else{
print (paste(i,"c"))
mut5Tany <- rbind(mut5Tany,mut[mut$Poly == i,])
}
}
# if(grep("5T,",i)){
#  print (i)
#}
}
mut5T12TG
mut5Tany
cftr <- read.table("Data/cftr.csv", header=TRUE,sep=",")
cftr$CFTR_mutace
mut <- cftr[cftr$CFTR_mutace != "c.[=];[=]",]
for(i in mut$Poly){
if(grepl("5T,",i)){
if(grepl("5T,12TG",i)){
print (paste(i,"f"))
mut5T12TG <- rbind(mut5T12TG,mut[mut$Poly == i,])
}else{
print (paste(i,"c"))
mut5Tany <- rbind(mut5Tany,mut[mut$Poly == i,])
}
}
# if(grep("5T,",i)){
#  print (i)
#}
}
mut5T12TG
cftr <- read.table("Data/cftr.csv", header=TRUE,sep=",")
cftr$CFTR_mutace
mut <- cftr[cftr$CFTR_mutace != "c.[=];[=]",]
mut5T12TG = mut[FALSE,]
mut5Tany = mut[FALSE,]
for(i in mut$Poly){
if(grepl("5T,",i)){
if(grepl("5T,12TG",i)){
print (paste(i,"f"))
mut5T12TG <- rbind(mut5T12TG,mut[mut$Poly == i,])
}else{
print (paste(i,"c"))
mut5Tany <- rbind(mut5Tany,mut[mut$Poly == i,])
}
}
# if(grep("5T,",i)){
#  print (i)
#}
}
mut5T12TG
mut5Tany
source('~/REPROMEDA_TEST/prakticky-test/CFTR_analysis.r', echo=TRUE)
nrow(mut5T12TG)
nrow(mut5Tany)
print("Number of pacients with mutations:")
print(paste("5T(>=12TG) : ", nrow(mut5T12TG), "\n gf"))
print(paste("5T(>=12TG) : ", nrow(mut5T12TG), \n, "gf"))
print("Number of pacients with mutations:")
print(paste("5T(>=12TG) : ", nrow(mut5T12TG)))
print(paste("MUT         : ", nrow(othermut)))
print(paste("MUT + 5T   : ", nrow(mut5Tany)))
source('~/REPROMEDA_TEST/prakticky-test/CFTR_analysis.r', echo=TRUE)
View(othermut)
homozygot = mut[FALSE,]
for(i in mut$Poly){
if(grepl("; - ",i)){
homozygot <- rbind(homozygot,mut[mut$Poly == i,])
}
}
homozygot
nrow(homozygot)
nrow(mut)
mut
homozygot = mut[FALSE,]
for(i in mut$Poly){
if(grepl("; - ",i)){
homozygot <- rbind(homozygot,mut[mut$Poly == i,])
}
}
nrow(homozygot)
nrow(mut)
homozygot = mut[FALSE,]
for(i in mut$Poly){
if(grepl("; - ",i)){
print(i)
homozygot <- rbind(homozygot,mut[mut$Poly == i,])
}
}
othermut
for(i in 1:nrow(mut)){
mut[i,mut$Poly]
}
mut[i,]
for(i in 1:nrow(mut)){
mut[i,]
}
mut[i,]
mut[mut$Polt[mut[i,],],]
for(i in 1:nrow(mut)){
if(grepl("5T,",mut[i,])){
if(grepl("5T,12TG",mut[i,])){
mut5T12TG <- rbind(mut5T12TG,mut[i,])
}else{
mut5Tany <- rbind(mut5Tany,mut[i,])
}
}else{
othermut <- rbind(othermut,mut[i,])
}
}
mut[mut$Polt[mut[i,],],]
warnings()
mut[1,]
mut[1,mut$Poly.T]
mut[1,"Poly.T"]
for(i in 1:nrow(mut)){
if(grepl("5T,",mut[i,"Poly.T"])){
if(grepl("5T,12TG",mut[i,"Poly.T"])){
mut5T12TG <- rbind(mut5T12TG,mut[i,])
}else{
mut5Tany <- rbind(mut5Tany,mut[i,])
}
}else{
othermut <- rbind(othermut,mut[i,])
}
}
mut5T12TG = mut[FALSE,]
mut5Tany = mut[FALSE,]
othermut = mut[FALSE,]
for(i in 1:nrow(mut)){
if(grepl("5T,",mut[i,"Poly.T"])){
if(grepl("5T,12TG",mut[i,"Poly.T"])){
mut5T12TG <- rbind(mut5T12TG,mut[i,])
}else{
mut5Tany <- rbind(mut5Tany,mut[i,])
}
}else{
othermut <- rbind(othermut,mut[i,])
}
}
print("Number of pacients with mutations:")
print(paste("5T(>=12TG) : ", nrow(mut5T12TG)))
print(paste("MUT        : ", nrow(othermut)))
print(paste("MUT + 5T   : ", nrow(mut5Tany)))
homozygot = mut[FALSE,]
for(i in 1:nrow(mut)){
if(grepl("; - ",mut[i,"Poly.T"])){
print(i)
homozygot <- rbind(homozygot,mut[i,])
}
}
nrow(homozygot)
nrow(mut)
homozygot
homozygot = mut[FALSE,]
for(i in 1:nrow(mut)){
if(grepl("; - ",mut[i,"Poly.T"])){
homozygot <- rbind(homozygot,mut[i,])
}
}
nrow(homozygot)
nrow(mut)
slices <- c(nrow(homozygot), nrow(mut))
lbls <- c("homozygot", "heterozygot")
pie(slices, labels = lbls, main="Poly-T varianta")
slices <- c(nrow(homozygot), nrow(mut))
pct <- round(slices/sum(slices)*100)
lbls <- c("homozygot", "heterozygot")
lbls <- paste(lbls, pct)
pie(slices, labels = lbls, main="Poly-T varianta")
slices <- c(nrow(homozygot), nrow(mut))
pct <- round(slices/sum(slices)*100)
lbls <- c("homozygot", "heterozygot")
lbls <- paste(lbls," ", pct,"%")
pie(slices, labels = lbls, main="Poly-T varianta")
cftr$CFTR_mutace
nlevels(cftr$CFTR_mutace)
print(paste("Number of CTFR variants: ",nlevels(cftr$CFTR_mutace)))
install.packages("plyr")
count(cftr$CFTR_mutace)
library(plyr)
count(cftr$CFTR_mutace)
print(count(cftr$CFTR_mutace))
